" Disable auto add hash when copy from texts
" !!! CAUTION !!! set paste will disable abbreviation setting! don't know why
"set paste

" Abbreviation
ab pa set paste
ab tlg TlistToggle
ab vres vertical resize
ab rd r!date
ab rp r!pbpaste
filetype plugin on


colorscheme mario
"colorscheme elflord
syntax enable
"set background=dark
"colorscheme solarized

"set hlsearch
"set autoindent
"set number
set title
set autochdir
syntax on

" allow auto complete only in currrent file
set complete-=i



" Obsolete ctag config

" ctags optimization
"set tags=./tags; /media/sf_zen/genesis/backend/
"noremap <Leader>t :!ctags-proj.sh<CR>






" KEY REMAP

"vnoremap <C-c> "*y
nnoremap <C-e> 2<C-e>
nnoremap <C-y> 2<C-y>

" vsplit switch optimization
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" resize current buffer by +/- 5
" <F1> requries map to disable help popout
map <F1> :vertical resize -5<cr>    
imap <F1> :vertical resize -5<cr>    
nnoremap <F2> :resize +5<cr>
nnoremap <F3> :resize -5<cr>
nnoremap <F4> :vertical resize +5<cr>





" General Identation
set expandtab | set tabstop=8 | set shiftwidth=4 | set softtabstop=4


" Make vim understand that .md is short for .markdown
filetype on
autocmd BufNewFile,BufRead *.md setlocal filetype=markdown


" OTHERS
highlight ExtraWhitespace ctermbg=grey guibg=grey
match ExtraWhitespace /\s\+$/

" MARKDOWN CONFIG
autocmd FileType markdown highlight ExtraWhitespace ctermbg=blue guibg=blue
autocmd FileType markdown match ExtraWhitespace /\s\+$/
autocmd FileType markdown set shiftwidth=2


" PYTHON CONFIG
autocmd FileType python highlight ExtraWhitespace ctermbg=grey guibg=grey
autocmd FileType python match ExtraWhitespace /\s\+$/
" hight-light characters greater than 80
autocmd FileType python highlight OverLength ctermbg=red ctermfg=white guibg=#592929
autocmd FileType python match OverLength /\%80v.\+/






" MAC CONFIG

set clipboard=unnamed

" ******** file encode ********
" unix or dos file
set fileformats=unix,dos
" euc-cn is alias to gb2312
" set vi inside coding, must be set when you use gbk or utf-8
set encoding=utf-8
" actual file encoding, will set as it except fileencodings load other
" set fileencoding=gb2312
set fileencodings=utf-bom,utf-8,gbk,gb2312,gb18030,cp936,latin1
" terminal encoding
" even if you set utf-8 in ssh client
set termencoding=utf-8

" Fix copy paste issues on iterm
set mouse=nichr

" Allow backspacing everything in insert mode
" Type   :help backspace   to view details
set backspace=indent,eol,start


" Disable auto insert hash when type newline after a comment line
" Type   :help fo-table   to view details
set formatoptions-=cro





" Indent Python in the Google way.

setlocal indentexpr=GetGooglePythonIndent(v:lnum)

let s:maxoff = 50 " maximum number of lines to look backwards.

function GetGooglePythonIndent(lnum)

  " Indent inside parens.
  " Align with the open paren unless it is at the end of the line.
  " E.g.
  "   open_paren_not_at_EOL(100,
  "                         (200,
  "                          300),
  "                         400)
  "   open_paren_at_EOL(
  "       100, 200, 300, 400)
  call cursor(a:lnum, 1)
  let [par_line, par_col] = searchpairpos('(\|{\|\[', '', ')\|}\|\]', 'bW',
        \ "line('.') < " . (a:lnum - s:maxoff) . " ? dummy :"
        \ . " synIDattr(synID(line('.'), col('.'), 1), 'name')"
        \ . " =~ '\\(Comment\\|String\\)$'")
  if par_line > 0
    call cursor(par_line, 1)
    if par_col != col("$") - 1
      return par_col
    endif
  endif

  " Delegate the rest to the original function.
  return GetPythonIndent(a:lnum)

endfunction

let pyindent_nested_paren="&sw*2"
let pyindent_open_paren="&sw*2"
