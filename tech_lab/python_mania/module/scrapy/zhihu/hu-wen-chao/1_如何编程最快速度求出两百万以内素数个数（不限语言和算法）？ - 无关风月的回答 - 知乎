<!DOCTYPE html>
<html lang="zh-CN" dropEffect="none" class="no-js no-auth">
<head>
<meta charset="utf-8" />

<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
<meta name="renderer" content="webkit" />

<title>如何编程最快速度求出两百万以内素数个数（不限语言和算法）？ - 无关风月的回答 - 知乎</title>

<meta name="apple-itunes-app" content="app-id=432274380, app-argument=zhihu://answers/30885966">



<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
<meta http-equiv="mobile-agent" content="format=html5;url=http://www.zhihu.com/question/24942373/answer/30885966">
<meta id="znonce" name="znonce" content="a0e6fa8aaf5e4197b55b81d499bb3b56">
<link rel="apple-touch-icon-precomposed" href="http://static.zhihu.com/static/img/ios/zhihu(57px).png" />
<link rel="apple-touch-icon-precomposed" href="http://static.zhihu.com/static/img/ios/zhihu(72px).png" sizes="72x72" />
<link rel="apple-touch-icon-precomposed" href="http://static.zhihu.com/static/img/ios/zhihu(76px).png" sizes="76x76" />
<link rel="apple-touch-icon-precomposed" href="http://static.zhihu.com/static/img/ios/zhihu(114px).png" sizes="114x114" />
<link rel="apple-touch-icon-precomposed" href="http://static.zhihu.com/static/img/ios/zhihu(120px).png" sizes="120x120" />
<link rel="apple-touch-icon-precomposed" href="http://static.zhihu.com/static/img/ios/zhihu(152px).png" sizes="152x152" />


<link rel="shortcut icon" href="http://static.zhihu.com/static/favicon.ico" type="image/x-icon">

<link rel="search" type="application/opensearchdescription+xml" href="http://static.zhihu.com/static/search.xml" title="知乎" />
<link rel="stylesheet" href="http://static.zhihu.com/static/ver/674bf4f0e05e4b18c6389f28dff2bc4d.z.css">

<meta name="google-site-verification" content="FTeR0c8arOPKh8c5DYh_9uu98_zJbaWw53J-Sch9MTg" />
<meta property="qc:admins" content="14414345146201056375" />



<!--[if lt IE 9]>
<script src="http://static.zhihu.com/static/components/respond/dest/respond.min.js"></script>
<link href="http://static.zhihu.com/static/components/respond/cross-domain/respond-proxy.html" id="respond-proxy" rel="respond-proxy" />
<link href="/static/components/respond/cross-domain/respond.proxy.gif" id="respond-redirect" rel="respond-redirect" />
<script src="/static/components/respond/cross-domain/respond.proxy.js"></script>
<![endif]-->

<script src="http://static.zhihu.com/static/ver/881eced7455dbba5c51d3fa98ba6666d.instant.min.js"></script>

<link rel="canonical" href="http://www.zhihu.com/question/24942373" />

</head>

<body class="zhi">
<div role="navigation" class="zu-top">
<div class="zg-wrap modal-shifting" id="zh-top-inner">
<a href="/" class="zu-top-link-logo" id="zh-top-link-logo">知乎</a>


<div role="search" id="zh-top-search" class="zu-top-search">
<form method="GET" action="/search" id="zh-top-search-form" class="zu-top-search-form form-with-magnify">

<input type="text" class="zu-top-search-input" id="q" name="q" autocomplete="off" value="" placeholder="搜索话题、问题或人…" />
<input type="hidden" name="type" value="question" />
<label for="q" class="hide-text">知乎搜索</label>
<button type="submit" class="magnify-button"><i class="icon icon-magnify-q"></i><span class="hide-text">搜索</span></button>
</form>
<button class="zu-top-add-question" id="zu-top-add-question">提问</button>
</div>



<div id="zg-top-nav" class="zu-top-nav">
<ul class="zu-top-nav-ul zg-clear">

<li class="zu-top-nav-li " id="zh-top-nav-home">
<a class="zu-top-nav-link" href="/" id="zh-top-link-home">首页</a>
</li>
<li class="top-nav-topic-selector zu-top-nav-li " id="zh-top-nav-topic">
<a class="zu-top-nav-link" href="/topic" id="top-nav-dd-topic">话题</a>

</li>
<li class="zu-top-nav-li " id="zh-top-nav-explore">
<a class="zu-top-nav-link" href="/explore">发现</a>
</li>


</ul>
<div class="zu-top-nav-live zu-noti7-popup zg-r5px no-hovercard" id="zh-top-nav-live-new" role="popup" tabindex="0">
<div class="zu-top-nav-live-inner zg-r5px">
<div class="zu-top-live-icon">&nbsp;</div>
<div class="zu-home-noti-inner" id="zh-top-nav-live-new-inner">
<div class="zm-noti7-popup-tab-container clearfix" tabindex="0">
<button class="zm-noti7-popup-tab-item message">
<span class="icon">消息</span>
</button>
<button class="zm-noti7-popup-tab-item user">
<span class="icon">用户</span>
</button>
<button class="zm-noti7-popup-tab-item thanks">
<span class="icon">赞同和感谢</span>
</button>
</div>
</div>
<div class="zm-noti7-frame-border top"></div>
<div class="zm-noti7-frame">
<div class="zm-noti7-content">
<div class="zm-noti7-content-inner">
<div class="zm-noti7-popup-refresh" style="display:none;">
<img class="noti-spinner" src="/static/img/spinner2.gif" />
</div>
<div class="zm-noti7-content-body">
<div class="zm-noti7-popup-loading">
<img class="noti-spinner" src="/static/img/noti-loading.gif" />
</div>
</div>
</div>
</div>
<div class="zm-noti7-content" style="display:none;">
<div class="zm-noti7-content-inner">
<div class="zm-noti7-popup-refresh" style="display:none;">
<img class="noti-spinner" src="/static/img/spinner2.gif" />
</div>
<div class="zm-noti7-content-body">
<div class="zm-noti7-popup-loading">
<img class="noti-spinner" src="/static/img/noti-loading.gif" />
</div>
</div>
</div>
</div>
<div class="zm-noti7-content" style="display:none;">
<div class="zm-noti7-content-inner">
<div class="zm-noti7-popup-refresh" style="display:none;">
<img class="noti-spinner" src="/static/img/spinner2.gif" />
</div>
<div class="zm-noti7-content-body">
<div class="zm-noti7-popup-loading">
<img class="noti-spinner" src="/static/img/noti-loading.gif" />
</div>
</div>
</div>
</div>
</div>
<div class="zm-noti7-frame-border bottom"></div>
<div class="zm-noti7-popup-footer">
<a href="/notifications" class="zm-noti7-popup-footer-all zg-right">查看全部 &raquo;</a>
<a href="/settings/notification" class="zm-noti7-popup-footer-set" title="通知设置" ><i class="zg-icon zg-icon-settings"></i></a>
</div>
</div>
</div>

</div>



<ul class="topnav-noauth clearfix">
<li>
<a href="javascript:;" class="js-signup-noauth"><i class="zg-icon zg-icon-dd-home"></i>注册知乎</a>
</li>
<li>
<a href="javascript:;" class="js-signin-noauth">登录</a>
</li>
</ul>


</div>
</div>

<div class="zu-global-notify" id="zh-global-message" style="display:none">
<div class="zg-wrap">
<div class="zu-global-nitify-inner">
<a class="zu-global-notify-close" href="javascript:;" title="关闭" name="close">x</a>
<span class="zu-global-notify-icon"></span>
<span class="zu-global-notify-msg"></span>
</div>
</div>
</div>

<div class="zg-warn-message" id="zh-question-redirect-info" style="display:none"></div>
<div class="zg-wrap zu-main" id="zh-single-answer-page">
<div class="zu-main-content">
<div class="zu-main-content-inner with-indention-votebar">


<div class="zm-tag-editor zg-section">
<div class="zm-tag-editor-labels zg-clear">

<a class="zm-item-tag"
href="/topic/19552832"
data-tip="t$b$19552832" data-token="19552832" data-topicid="872">
Python
</a>

<a class="zm-item-tag"
href="/topic/19553510"
data-tip="t$b$19553510" data-token="19553510" data-topicid="1093">
算法
</a>

<a class="zm-item-tag"
href="/topic/19554298"
data-tip="t$b$19554298" data-token="19554298" data-topicid="1354">
编程
</a>

<a class="zm-item-tag"
href="/topic/19669697"
data-tip="t$b$19669697" data-token="19669697" data-topicid="39919">
素数
</a>

</div>
</div>
<div id="zh-question-title" data-editable="false">

<h2 class="zm-item-title zm-editable-content">

<a href="/question/24942373">如何编程最快速度求出两百万以内素数个数（不限语言和算法）？</a>

</h2>
</div>
<div id="zh-question-detail" class="zm-item-rich-text" data-resourceid="2158999" data-action="/question/detail">


<textarea class="content hidden">做这道题时，我用的python2写的埃氏筛法(Sieve of Eratosthenes, SoE), 在老macbookpro（2.4GHz Core 2 Duo, 8GB 1067 MHz DDR3）上跑要21秒，在新air（1.3GHz Core i5，4GB 1600 MHz DDR3）上跑13.4秒。&lt;br&gt;&lt;br&gt;如果不考虑Atkin等其他筛法只使用SoE的话，用C写能多快？&lt;br&gt;附上py代码:&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;n&quot;&gt;limit_for_q10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e+6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit_for_q10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit_for_q10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is_prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;----------------------------------8.23更新----------------------------------&lt;br&gt;谢谢大家的回答，根据众多意见（主要参照了连梁展瑞的代码）我用python重新写了SoE代码，代码在air上跑只需要1.4s了：把list用boolean维护而不是之前直接覆盖的操作；理解了筛法其实不需要is_prime()这种多余的操作。附上代码：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e+6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;另外也用python写了线性素数筛，实现起来比较慢，可能是因为需要重开一个prime储存已找到的素数，怎么解决这个问题呢？附上代码如下：&lt;br&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2e+6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prime_stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#only check odd numbers&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;prime_stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# if i is prime, put it into prime_stack[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;total&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# scan the prime_stack[ ]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prime_stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limit_for_q10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prime_stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prime_stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prime_stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</textarea>
<div class="zh-summary summary clearfix">
做这道题时，我用的python2写的埃氏筛法(Sieve of Eratosthenes, SoE), 在老macbookpro（2.4GHz Core 2 Duo, 8GB 1067 MHz DDR3）上跑要21秒，在新air（1.3GHz Core i5，4GB 1600 MHz DDR3）上跑13.4秒。<br><br>如果不考虑Atkin等其他筛法只使用SoE的话，用C写能多快？<br>附上py代码:<div class="highlight"><pre><span class="n">limit_for_q10</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nb">int</span><span class="p">(</span><span class="mf">1e+6</span><span class="p">)</span>
<span class="nb">list</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="n">limit_for_q10</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="nb">int</span><span class="p">(</span><span class="n">limit_for_q10</span><span class="o">**</span><span class="mf">0.5</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">is_prime</span><span class="p">(</span><span class="n">i</span><span class="p">):</span>
    <span class="nb">list</span><span class="o">=</span><span class="p">[</span><span class="n">x</span> <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">list</span> <span class="k">if</span> <span class="n">x</span><span class="o">%</span><span class="n">i</span><span class="o">!=</span><span class="mi">0</span> <span class="ow">or</span> <span class="n">x</span><span class="o">==</span><span class="n">i</span><span class="p">]</span>
    <span class="k">if</span> <span class="nb">list</span><span class="p">[</span><span class="nb">len</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">&lt;</span><span class="nb">list</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">**</span><span class="mi">2</span><span class="p">:</span> <span class="k">break</span>
<span class="k">print</span> <span class="nb">len</span><span class="p">(</span><span class="nb">list</span><span class="p">)</span>
</pre></div>----------------------------------8.23更新----------------------------------<br>谢谢大家的回答，根据众多意见（主要参照了连梁展瑞的代码）我用python重新写了SoE代码，代码在air上跑只需要1.4s了：把list用boolean维护而不是之前直接覆盖的操作；理解了筛法其实不需要is_prime()这种多余的操作。附上代码：<br>from math import sqrt
limit = 2 * int(1e+6)
p = [True] * (limit + 1)
p[0] = p[1] = False
for i in range(2, int(sqrt(limit)+1)):
    if p[i]:
        for j in range(i * i, limit+1, i):
            p[j] = False
prime = [i for i in range(limit+1) if p[i]]
print (len(prime))
…
<a href="javascript:;" class="toggle-expand">显示全部</a>
</div>


</div>
<div class="zm-item-meta zm-item-comment-el clearfix" id="zh-question-meta-wrap">
<div class="zm-meta-panel">

<a href="#" name="addcomment" class="toggle-comment meta-item">
<i class="z-icon-comment"></i>9 条评论
</a>
<a href="#" name="share" class="share meta-item">
<i class="z-icon-share"></i>分享
</a>

</div>
<div class="panel-container">

</div>
</div>
<div class="zh-question-answer-summary-wrap zm-item-rich-text" id="zh-question-answer-summary-wrap" style="display:none;">
<h3>
<a href="http://www.zhihu.com/question/20014415" target="_blank" class="zg-right zg-link-litblue" style="font-weight:normal">什么是答案总结？</a>
答案总结</h3>
<div id="zh-question-answer-summary" class="zg-section"
data-resourceid="2158999" data-action="/question/summary">

<div class="zm-editable-content"></div>

</div>
</div>

<div class="zh-answers-title">
<h3><a href="/question/24942373" class="zg-link-litblue">查看全部 34 个回答</a></h3>
</div>

<div id="zh-question-answer-wrap" class="zh-question-answer-wrapper autohide-false"
data-widget="navigable" data-navigable-options="{&quot;items&quot;:&quot;&gt;.zm-item-answer&quot;}"
style="border-bottom:none;">

<div tabindex="-1" class="zm-item-answer "

itemscope itemtype="http://schema.org/Answer"
data-aid="7739154"
data-atoken="30885966"
data-collapsed="0"
data-created="1411403375"
data-deleted="0"
data-helpful="1"
data-isowner="0"
data-copyable="1"


>
<a class="zg-anchor-hidden" name="answer-7739154"></a>


<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="label">赞同</span>
<span class="count">1</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label">反对</span>
</button>
</div>


<div class="answer-head">
<div class="zm-item-answer-author-info">
<h3 class="zm-item-answer-author-wrap">


<a data-tip="p$t$hu-wen-chao"
class="zm-item-link-avatar"
href="/people/hu-wen-chao">
<img src="http://pic3.zhimg.com/35cc03cf2_s.jpg"
class="zm-list-avatar"
data-source="http://pic3.zhimg.com/35cc03cf2_s.jpg" />
</a>



<a data-tip="p$t$hu-wen-chao" href="/people/hu-wen-chao">无关风月</a>，<strong title="刚刚上路的程序员，Python / 后端 / 游戏" class="zu-question-my-bio">刚刚上路的程序员，Python / 后端 / 游戏</strong>

</h3>
<a href="javascript:;" name="collapse" class="collapse meta-item zg-right"><i class="z-icon-fold"></i>收起</a>
</div>
<div class="zm-item-vote-info " data-votecount="1">

<span class="voters">
<span class="user-block"><a data-tip="p$t$guokr0029" href="http://www.zhihu.com/people/guokr0029" class="zg-link" title="guokr0029">guokr0029</a></span>
</span>


<span>赞同</span>


</div>
</div>
<div class="zm-item-rich-text" data-resourceid="2158999" data-action="/answer/content">

<div class=" zm-editable-content clearfix">stackoverflow上有个关于用python求解最快算法的讨论（<a href="http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python" class=" wrap external" target="_blank" rel="nofollow noreferrer">optimization<i class="icon-external"></i></a>），如果用纯python语言的话，最快的算法是下面这个：<br><div class="highlight"><pre><code class="language-python"><span class="k">def</span> <span class="nf">rwh_primes2</span><span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="mi">10</span><span class="o">**</span><span class="mi">6</span><span class="p">):</span>
    <span class="c"># http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188</span>
    <span class="sd">""" Input n&gt;=6, Returns a list of primes, 2 &lt;= p &lt; n """</span>
    <span class="n">correction</span> <span class="o">=</span> <span class="p">(</span><span class="n">n</span><span class="o">%</span><span class="mi">6</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">n</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">:</span><span class="n">n</span><span class="p">,</span><span class="mi">1</span><span class="p">:</span><span class="n">n</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">:</span><span class="n">n</span><span class="o">+</span><span class="mi">4</span><span class="p">,</span><span class="mi">3</span><span class="p">:</span><span class="n">n</span><span class="o">+</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">:</span><span class="n">n</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">:</span><span class="n">n</span><span class="o">+</span><span class="mi">1</span><span class="p">}[</span><span class="n">n</span><span class="o">%</span><span class="mi">6</span><span class="p">]</span>
    <span class="n">sieve</span> <span class="o">=</span> <span class="p">[</span><span class="bp">True</span><span class="p">]</span> <span class="o">*</span> <span class="p">(</span><span class="n">n</span><span class="o">/</span><span class="mi">3</span><span class="p">)</span>
    <span class="n">sieve</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">n</span><span class="o">**</span><span class="mf">0.5</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
      <span class="k">if</span> <span class="n">sieve</span><span class="p">[</span><span class="n">i</span><span class="p">]:</span>
        <span class="n">k</span><span class="o">=</span><span class="mi">3</span><span class="o">*</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span>
        <span class="n">sieve</span><span class="p">[</span>      <span class="p">((</span><span class="n">k</span><span class="o">*</span><span class="n">k</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span><span class="p">)</span>      <span class="p">::</span><span class="mi">2</span><span class="o">*</span><span class="n">k</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="bp">False</span><span class="p">]</span><span class="o">*</span><span class="p">((</span><span class="n">n</span><span class="o">/</span><span class="mi">6</span><span class="o">-</span><span class="p">(</span><span class="n">k</span><span class="o">*</span><span class="n">k</span><span class="p">)</span><span class="o">/</span><span class="mi">6</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
        <span class="n">sieve</span><span class="p">[(</span><span class="n">k</span><span class="o">*</span><span class="n">k</span><span class="o">+</span><span class="mi">4</span><span class="o">*</span><span class="n">k</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">k</span><span class="o">*</span><span class="p">(</span><span class="n">i</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">))</span><span class="o">/</span><span class="mi">3</span><span class="p">::</span><span class="mi">2</span><span class="o">*</span><span class="n">k</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="bp">False</span><span class="p">]</span><span class="o">*</span><span class="p">((</span><span class="n">n</span><span class="o">/</span><span class="mi">6</span><span class="o">-</span><span class="p">(</span><span class="n">k</span><span class="o">*</span><span class="n">k</span><span class="o">+</span><span class="mi">4</span><span class="o">*</span><span class="n">k</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="n">k</span><span class="o">*</span><span class="p">(</span><span class="n">i</span><span class="o">&amp;</span><span class="mi">1</span><span class="p">))</span><span class="o">/</span><span class="mi">6</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="n">k</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span>
    <span class="k">return</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="mi">3</span><span class="o">*</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="o">|</span><span class="mi">1</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="n">n</span><span class="o">/</span><span class="mi">3</span><span class="o">-</span><span class="n">correction</span><span class="p">)</span> <span class="k">if</span> <span class="n">sieve</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span>
</code></pre></div>下面是我跑出来的结果：<br><div class="highlight"><pre><code class="language-text">In [81]: timeit(rwh_primes2(2000000))
10 loops, best of 3: 64.4 ms per loop
</code></pre></div>电脑信息：<br><blockquote><p><b>处理器</b>  2.6 GHz Intel Core i5</p><p><b>内存</b>  8 GB 1600 MHz DDR3</p></blockquote>


</div>

</div>
<a class="zg-anchor-hidden ac" name="7739154-comment"></a>
<div class="zm-item-meta zm-item-comment-el answer-actions clearfix">
<div class="zm-meta-panel">

<span class="answer-date-link-wrap">
<a class="answer-date-link meta-item" target="_blank" href="/question/24942373/answer/30885966">发布于 2014-09-23</a>
</span>

<a href="#" name="addcomment" class=" meta-item toggle-comment">
<i class="z-icon-comment"></i>添加评论</a>


<a href="#" class="meta-item zu-autohide" name="thanks" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide" name="share">
<i class="z-icon-share"></i>分享</a>
<a href="#" class="meta-item zu-autohide" name="favo">
<i class="z-icon-collect"></i>收藏</a>




<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" name="nohelp" class="meta-item zu-autohide">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" name="report" class="meta-item zu-autohide">举报</a>



<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright"> 作者保留权利 </a>



</div>
</div>
</div>
</div>


<div class="more-awesome"><span>更多回答</span></div>
<div class="awesome-answer-list" data-fixed-summary="1">

<div class="feed-item">
<div class="content">
<div class="entry-body "
data-aid="7218563"
data-atoken="29587434"
data-collapsed="False"
data-created="1408771766"
data-deleted="0"
data-isowner="0"
data-helpful="1"
data-score="0"
data-copyable="1"
>

<div class="zm-item-vote">
<a name="expand" class="zm-item-vote-count" href="javascript:;" data-votecount="10">10</a>
</div>
<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="label">赞同</span>
<span class="count">10</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label">反对</span>
</button>
</div>

<div class="zm-item-answer-detail">
<div class="zm-item-answer-author-info">
<h3 class="zm-item-answer-author-wrap">


<a data-tip="p$t$zhao-fu-feng" href="/people/zhao-fu-feng">赵扶风</a>，<strong title="豆瓣穷三代，知乎毁一生" class="zu-question-my-bio">豆瓣穷三代，知乎毁一生</strong>

</h3>
<a href="javascript:;" name="collapse" class="collapse meta-item zg-right"><i class="z-icon-fold"></i>收起</a>
</div>
<div class="zm-item-vote-info " data-votecount="10">

<span class="voters">
<span class="user-block"><a data-tip="p$t$tu-ba-ge-37" href="http://www.zhihu.com/people/tu-ba-ge-37" class="zg-link" title="兔八哥">兔八哥</a>、</span><span class="user-block">知乎用户、</span><span class="user-block">知乎用户</span>
</span>


<a href="javascript:;" class="more"> 等人赞同</a>


</div>
<div class="zm-item-rich-text" data-resourceid="2158999" data-action="/answer/content">

<div class="fixed-summary zm-editable-content clearfix">我来终结此问题。<br>计算素数个数被数学家和ACMer玩烂了，没啥优化的空间了。<br>用C语言，计算200万以内素数个数，100次实验取平均<br>用埃氏筛法，0.035620 seconds<br>用欧拉筛法，0.025630 seconds<br>计算1亿以内素数个数，10次实验取平均<br>用埃氏筛法，2.890600 seconds<br>用欧拉筛法，1.473400 seconds<br>运行机器：32位XP<br><img src="http://pic3.zhimg.com/fd9b19c524818d95c909d9374b5cfbaa_b.jpg" data-rawwidth="152" data-rawheight="68" class="content_image" width="152"><div class="highlight"><pre><code class="language-cpp"><span class="cp">#include &lt;math.h&gt;</span>
<span class="cp">#include &lt;stdio.h&gt;</span>
<span class="cp">#include &lt;string.h&gt;</span>
<span class="cp">#include &lt;time.h&gt;</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">N</span> <span class="o">=</span> <span class="mi">2000000</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">b</span><span class="p">[</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">c</span><span class="p">[</span><span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
<span class="kt">void</span> <span class="nf">Era_select</span><span class="p">(){</span> <span class="c1">// Eratosthenes</span>
	<span class="n">memset</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">q</span> <span class="o">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">sqrt</span><span class="p">(</span><span class="n">N</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">q</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span> <span class="p">){</span>
		<span class="k">if</span> <span class="p">(</span> <span class="o">!</span> <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">){</span>
			<span class="k">for</span> <span class="p">(</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="mi">1</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;=</span><span class="n">N</span><span class="p">;</span> <span class="n">j</span><span class="o">+=</span><span class="n">i</span> <span class="p">){</span>
				<span class="n">b</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">for</span> <span class="p">(</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span> <span class="p">){</span>
		<span class="k">if</span> <span class="p">(</span> <span class="o">!</span> <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">){</span>
			<span class="o">++</span><span class="n">cnt</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="c1">//printf("%d\n", cnt);</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">Euler_select</span><span class="p">(){</span>
	<span class="n">memset</span><span class="p">(</span><span class="n">b</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">N</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">cnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">t</span><span class="p">;</span>
	<span class="k">for</span> <span class="p">(</span> <span class="n">i</span><span class="o">=</span><span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;=</span><span class="n">N</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span> <span class="p">){</span>
		<span class="k">if</span> <span class="p">(</span> <span class="o">!</span> <span class="n">b</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">){</span>
			<span class="n">c</span><span class="p">[</span><span class="n">cnt</span><span class="o">++</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">for</span> <span class="p">(</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">j</span><span class="o">&lt;</span><span class="n">cnt</span><span class="p">;</span> <span class="o">++</span><span class="n">j</span> <span class="p">){</span>
			<span class="n">t</span> <span class="o">=</span> <span class="n">i</span><span class="o">*</span><span class="n">c</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
			<span class="k">if</span> <span class="p">(</span> <span class="n">t</span> <span class="o">&gt;</span> <span class="n">N</span> <span class="p">){</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="p">}</span>
			<span class="n">b</span><span class="p">[</span><span class="n">t</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
			<span class="k">if</span> <span class="p">(</span> <span class="n">i</span><span class="o">%</span><span class="n">c</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="p">){</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="c1">//printf("%d\n", cnt);</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="kt">int</span> <span class="n">i</span><span class="p">,</span> <span class="n">num</span><span class="o">=</span><span class="mi">100</span><span class="p">;</span>
	<span class="kt">clock_t</span> <span class="n">start</span><span class="p">;</span>
	<span class="n">start</span> <span class="o">=</span> <span class="n">clock</span><span class="p">();</span>
	<span class="k">for</span> <span class="p">(</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">num</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span> <span class="p">){</span>
		<span class="n">Era_select</span><span class="p">();</span>
	<span class="p">}</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%lf seconds</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="p">(</span><span class="kt">double</span><span class="p">)(</span><span class="n">clock</span><span class="p">()</span><span class="o">-</span><span class="n">start</span><span class="p">)</span> <span class="o">/</span> <span class="n">CLOCKS_PER_SEC</span> <span class="o">/</span> <span class="n">num</span><span class="p">);</span>
	<span class="n">start</span> <span class="o">=</span> <span class="n">clock</span><span class="p">();</span>
	<span class="k">for</span> <span class="p">(</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span><span class="n">num</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span> <span class="p">){</span>
		<span class="n">Euler_select</span><span class="p">();</span>
	<span class="p">}</span>
	<span class="n">printf</span><span class="p">(</span><span class="s">"%lf seconds</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="p">(</span><span class="kt">double</span><span class="p">)(</span><span class="n">clock</span><span class="p">()</span><span class="o">-</span><span class="n">start</span><span class="p">)</span> <span class="o">/</span> <span class="n">CLOCKS_PER_SEC</span> <span class="o">/</span> <span class="n">num</span><span class="p">);</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div>其中欧拉筛法参考：<a href="http://wenku.baidu.com/link?url=KgTW4k4JLM5RfBy-n0MFdMJhhIRUXPzOP3Wo2rgIMjpDf5N0YKiEtQWjUDzysHoUBPC3vd0V7m9AQdxC01dTAqVWYHeHVtmqOFiUGpNl_e7" class=" wrap external" target="_blank" rel="nofollow noreferrer">贾志鹏线性筛_百度文库<i class="icon-external"></i></a><br>感谢<a data-hash="157deec64cc5e062b2207aeece42f50f" href="http://www.zhihu.com/people/157deec64cc5e062b2207aeece42f50f" class="member_mention" data-editable="true" data-title="@Taptree" data-tip="p$b$157deec64cc5e062b2207aeece42f50f">@Taptree</a> 的回答
<a href="/question/24942373/answer/29587434" class="toggle-expand">显示全部</a>
<div class="fixed-summary-mask"></div>
</div>

</div>
</div>
</div>
</div>
<a class="zg-anchor-hidden ac" name="7218563-comment"></a>
<div class="zm-item-meta zm-item-comment-el answer-actions clearfix">
<div class="zm-meta-panel">

<span class="answer-date-link-wrap">
<a class="answer-date-link last_updated meta-item" data-tip="s$t$发布于 2014-08-23" target="_blank" href="/question/24942373/answer/29587434">编辑于 2014-08-23</a>
</span>

<a href="#" name="addcomment" class=" meta-item toggle-comment">
<i class="z-icon-comment"></i>4 条评论</a>


<a href="#" class="meta-item zu-autohide" name="thanks" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide" name="share">
<i class="z-icon-share"></i>分享</a>
<a href="#" class="meta-item zu-autohide" name="favo">
<i class="z-icon-collect"></i>收藏</a>




<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" name="nohelp" class="meta-item zu-autohide">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" name="report" class="meta-item zu-autohide">举报</a>



<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright"> 作者保留权利 </a>



</div>
</div>
</div>

<div class="feed-item">
<div class="content">
<div class="entry-body "
data-aid="7223433"
data-atoken="29599552"
data-collapsed="False"
data-created="1408794785"
data-deleted="0"
data-isowner="0"
data-helpful="1"
data-score="0"
data-copyable="1"
>

<div class="zm-item-vote">
<a name="expand" class="zm-item-vote-count" href="javascript:;" data-votecount="55">55</a>
</div>
<div class="zm-votebar">
<button class="up ">
<i class="icon vote-arrow"></i>
<span class="label">赞同</span>
<span class="count">55</span>
</button>
<button class="down ">
<i class="icon vote-arrow"></i>
<span class="label">反对</span>
</button>
</div>

<div class="zm-item-answer-detail">
<div class="zm-item-answer-author-info">
<h3 class="zm-item-answer-author-wrap">


知乎用户，<strong title="把诗意的理性献给你。公众号：PlusZeng" class="zu-question-my-bio">把诗意的理性献给你。公众号：PlusZeng</strong>

</h3>
<a href="javascript:;" name="collapse" class="collapse meta-item zg-right"><i class="z-icon-fold"></i>收起</a>
</div>
<div class="zm-item-vote-info " data-votecount="55">

<span class="voters">
<span class="user-block">知乎用户、</span><span class="user-block"><a data-tip="p$t$liu-yu-49" href="http://www.zhihu.com/people/liu-yu-49" class="zg-link" title="刘玉">刘玉</a>、</span><span class="user-block"><a data-tip="p$t$hs-li" href="http://www.zhihu.com/people/hs-li" class="zg-link" title="Hs Li">Hs Li</a></span>
</span>


<a href="javascript:;" class="more"> 等人赞同</a>


</div>
<div class="zm-item-rich-text" data-resourceid="2158999" data-action="/answer/content">

<div class="fixed-summary zm-editable-content clearfix">【多种方法比较，长文慎入】<br><br>看到各位大神用各种语言写的代码，我这个外行人也跃跃欲试了。<br>鉴于大家已经给出了C，C++，Python，Mathmatica等的实现过程，<b>那我就用</b><b>Java吧</b>。<br><br>我不会流氓地直接用各种Prime函数（那样对问题讨论毫无意义），还是<b>给出完整实现过程</b>吧。<br>算法一般，还有待改进，欢迎各位大神指正：<br><br><b>我用的是筛法，稍稍做了优化（把偶数单独列出来筛），代码如下：</b><br><br><br><b>1、初始版代码：<br></b><div class="highlight"><pre><code class="language-java"><span class="kd">class</span> <span class="nc">Prime</span><span class="o">{</span>	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">calculateNumber</span><span class="o">(</span><span class="kt">int</span> <span class="n">Nmax</span><span class="o">){</span>
		<span class="kt">boolean</span><span class="o">[]</span> <span class="n">isPrime</span><span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="n">Nmax</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">3</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">Nmax</span><span class="o">;</span><span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="o">)</span>
			<span class="n">isPrime</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
		<span class="n">isPrime</span><span class="o">[</span><span class="mi">2</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">3</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="n">Nmax</span><span class="o">);</span><span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="o">){</span>
			<span class="k">if</span><span class="o">(</span><span class="n">isPrime</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="kc">true</span><span class="o">){</span>
				<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">*</span><span class="n">i</span><span class="o">;</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">Nmax</span><span class="o">;</span><span class="n">j</span><span class="o">+=</span><span class="mi">2</span><span class="o">*</span><span class="n">i</span><span class="o">)</span>
					<span class="n">isPrime</span><span class="o">[</span><span class="n">j</span><span class="o">]=</span><span class="kc">false</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="kt">int</span> <span class="n">primeNum</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">Nmax</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="k">if</span><span class="o">(</span><span class="n">isPrime</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="kc">true</span><span class="o">)</span>
				<span class="n">primeNum</span><span class="o">++;</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">primeNum</span><span class="o">;</span>
	<span class="o">}</span>				
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="kd">final</span> <span class="kt">int</span> <span class="n">Nmax</span><span class="o">=</span><span class="mi">2000000</span><span class="o">;</span>
		<span class="kt">double</span> <span class="n">startTime</span><span class="o">=</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">primeNum</span><span class="o">=</span><span class="n">Prime</span><span class="o">.</span><span class="na">calculateNumber</span><span class="o">(</span><span class="n">Nmax</span><span class="o">);</span>
		<span class="kt">double</span> <span class="n">timeSpent</span><span class="o">=(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()-</span><span class="n">startTime</span><span class="o">)/</span><span class="mi">1000</span><span class="o">;</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The prime numbers from 1 to "</span><span class="o">+</span><span class="n">Nmax</span><span class="o">+</span><span class="s">" is "</span><span class="o">+</span><span class="n">primeNum</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Time spent : "</span><span class="o">+</span><span class="n">timeSpent</span><span class="o">+</span><span class="s">" s"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div><b><br>计算结果：<br><img src="http://pic3.zhimg.com/feb2ce67ae3d87cb2b06b140067b888e_b.jpg" data-rawwidth="371" data-rawheight="38" class="content_image" width="371"><img src="http://pic2.zhimg.com/08efd843d32ea85ea073357a7b3f363d_b.jpg" data-rawwidth="401" data-rawheight="32" class="content_image" width="401"><br></b>咦？<br>200万以内用时 <b>0.010 s</b><br>1亿以内用时 <b>0.926 s</b><br><br><b>好像比这里的人都稍稍快了一点哦。</b><br><br><b>——————————</b><br>考虑到这个算法在Nmax非常大的时候 “j+=2*i”会导致较多的重复筛选，因此针对Nmax较大的情况，我再次修改了程序，避免重复筛选：<br><br><b>2、改进版代码：（适用于Nmax较大时）</b><br><div class="highlight"><pre><code class="language-java"><span class="kd">class</span> <span class="nc">Prime</span><span class="o">{</span>	
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">calculateNumber</span><span class="o">(</span><span class="kt">int</span> <span class="n">Nmax</span><span class="o">){</span>
		<span class="kt">boolean</span><span class="o">[]</span> <span class="n">isPrime</span><span class="o">=</span><span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="n">Nmax</span><span class="o">+</span><span class="mi">1</span><span class="o">];</span>		
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">3</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">Nmax</span><span class="o">;</span><span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="o">)</span>
			<span class="n">isPrime</span><span class="o">[</span><span class="n">i</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
		<span class="n">isPrime</span><span class="o">[</span><span class="mi">2</span><span class="o">]=</span><span class="kc">true</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">3</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">Math</span><span class="o">.</span><span class="na">sqrt</span><span class="o">(</span><span class="n">Nmax</span><span class="o">);</span><span class="n">i</span><span class="o">+=</span><span class="mi">2</span><span class="o">){</span>
			<span class="k">if</span><span class="o">(</span><span class="n">isPrime</span><span class="o">[</span><span class="n">i</span><span class="o">]){</span>				
				<span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">*</span><span class="n">i</span><span class="o">;</span>
				<span class="kt">int</span> <span class="n">n</span><span class="o">=</span><span class="n">i</span><span class="o">;</span>
				<span class="k">while</span><span class="o">(</span><span class="n">j</span><span class="o">&lt;=</span><span class="n">Nmax</span><span class="o">){</span>					
					<span class="n">isPrime</span><span class="o">[</span><span class="n">j</span><span class="o">]=</span><span class="kc">false</span><span class="o">;</span>			
					<span class="k">while</span><span class="o">(</span><span class="n">Nmax</span><span class="o">/</span><span class="n">j</span><span class="o">&gt;=</span><span class="n">i</span><span class="o">){</span>
						<span class="n">isPrime</span><span class="o">[</span><span class="n">j</span><span class="o">*=</span><span class="n">i</span><span class="o">]=</span><span class="kc">false</span><span class="o">;</span>								
					<span class="o">}</span>
					<span class="n">n</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>
					<span class="k">while</span><span class="o">(!</span><span class="n">isPrime</span><span class="o">[</span><span class="n">n</span><span class="o">])</span>
						<span class="n">n</span><span class="o">+=</span><span class="mi">2</span><span class="o">;</span>				
					<span class="n">j</span><span class="o">=</span><span class="n">i</span><span class="o">*</span><span class="n">n</span><span class="o">;</span>				
				<span class="o">}</span>	
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="kt">int</span> <span class="n">primeNum</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
		<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">Nmax</span><span class="o">;</span><span class="n">i</span><span class="o">++){</span>
			<span class="k">if</span><span class="o">(</span><span class="n">isPrime</span><span class="o">[</span><span class="n">i</span><span class="o">]==</span><span class="kc">true</span><span class="o">){</span>
				<span class="n">primeNum</span><span class="o">++;</span>				
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">primeNum</span><span class="o">;</span>
	<span class="o">}</span>				
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">){</span>
		<span class="kd">final</span> <span class="kt">int</span> <span class="n">Nmax</span><span class="o">=</span><span class="mi">2000000</span><span class="o">;</span>
		<span class="kt">double</span> <span class="n">startTime</span><span class="o">=</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">primeNum</span><span class="o">=</span><span class="n">Prime</span><span class="o">.</span><span class="na">calculateNumber</span><span class="o">(</span><span class="n">Nmax</span><span class="o">);</span>
		<span class="kt">double</span> <span class="n">timeSpent</span><span class="o">=(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()-</span><span class="n">startTime</span><span class="o">)/</span><span class="mi">1000</span><span class="o">;</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The prime numbers from 1 to "</span><span class="o">+</span><span class="n">Nmax</span><span class="o">+</span><span class="s">" is "</span><span class="o">+</span><span class="n">primeNum</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Time spent : "</span><span class="o">+</span><span class="n">timeSpent</span><span class="o">+</span><span class="s">" s"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div>计算结果：<br><img src="http://pic1.zhimg.com/94daf3f109783281a465c69c13111f20_b.jpg" data-rawwidth="371" data-rawheight="39" class="content_image" width="371"><img src="http://pic2.zhimg.com/ee27ee91b653024830adf5e955e2dbc9_b.jpg" data-rawwidth="395" data-rawheight="35" class="content_image" width="395"><br>200万以内用时 <b>0.013 s（比原来慢了一些）</b><br><u><b>1亿以内用时 0.573 s （更快了）</b></u><br><br>据说Java比C要慢不少，所以我也不知道怎么回事呀，大概是我的笔记本电脑比较快？<br>求各位大神解释吧。<br><img src="http://pic3.zhimg.com/75353683d906c7d19ef44c0246311552_b.jpg" data-rawwidth="520" data-rawheight="99" class="origin_image zh-lightbox-thumb" width="520" data-original="http://pic3.zhimg.com/75353683d906c7d19ef44c0246311552_r.jpg"><br><b>欢迎大家讨论。</b><br><br><b>————————</b><br>附：<br>我看到很多人用了欧拉筛法，回复中建议我用他们的方法试试，于是我用Java改写了 <a data-hash="157deec64cc5e062b2207aeece42f50f" href="http://www.zhihu.com/people/157deec64cc5e062b2207aeece42f50f" class="member_mention" data-editable="true" data-title="@Taptree" data-tip="p$b$157deec64cc5e062b2207aeece42f50f">@Taptree</a> 的算法，如下所示：<br><br><b>3、用欧拉筛法：</b><br><div class="highlight"><pre><code class="language-java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Prime2</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">calculateNumber</span><span class="o">(</span><span class="kt">int</span> <span class="n">Nmax</span><span class="o">)</span> <span class="o">{</span>
		<span class="kt">boolean</span><span class="o">[]</span> <span class="n">isPrime</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">boolean</span><span class="o">[</span><span class="n">Nmax</span> <span class="o">+</span> <span class="mi">1</span><span class="o">];</span>
		<span class="kt">int</span><span class="o">[]</span> <span class="n">prime</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">Nmax</span> <span class="o">/</span> <span class="mi">10</span><span class="o">];</span>
		<span class="kt">int</span> <span class="n">totalPrimes</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">Nmax</span><span class="o">;</span> <span class="n">i</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">)</span>
			<span class="n">isPrime</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
		<span class="n">isPrime</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>
		<span class="n">prime</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="mi">2</span><span class="o">;</span>
		<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">Nmax</span><span class="o">;</span> <span class="n">i</span> <span class="o">+=</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
			<span class="k">if</span> <span class="o">(</span><span class="n">isPrime</span><span class="o">[</span><span class="n">i</span><span class="o">])</span>
				<span class="n">prime</span><span class="o">[</span><span class="n">totalPrimes</span><span class="o">++]</span> <span class="o">=</span> <span class="n">i</span><span class="o">;</span>
			<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">*</span> <span class="n">prime</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">&lt;=</span> <span class="n">Nmax</span> <span class="o">&amp;&amp;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">totalPrimes</span><span class="o">;</span> <span class="n">j</span><span class="o">++){</span>
				<span class="n">isPrime</span><span class="o">[</span><span class="n">i</span> <span class="o">*</span> <span class="n">prime</span><span class="o">[</span><span class="n">j</span><span class="o">]]</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>
				<span class="k">if</span><span class="o">(</span><span class="n">i</span><span class="o">%</span><span class="n">prime</span><span class="o">[</span><span class="n">j</span><span class="o">]==</span><span class="mi">0</span><span class="o">)</span>
					<span class="k">break</span><span class="o">;</span>
			<span class="o">}</span>
		<span class="o">}</span>
		<span class="k">return</span> <span class="n">totalPrimes</span><span class="o">;</span>
	<span class="o">}</span>

	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
		<span class="kd">final</span> <span class="kt">int</span> <span class="n">Nmax</span> <span class="o">=</span> <span class="mi">2000000</span><span class="o">;</span>
		<span class="kt">double</span> <span class="n">startTime</span> <span class="o">=</span> <span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">();</span>
		<span class="kt">int</span> <span class="n">primeNum</span> <span class="o">=</span> <span class="n">Prime2</span><span class="o">.</span><span class="na">calculateNumber</span><span class="o">(</span><span class="n">Nmax</span><span class="o">);</span>
		<span class="kt">double</span> <span class="n">timeSpent</span> <span class="o">=</span> <span class="o">(</span><span class="n">System</span><span class="o">.</span><span class="na">currentTimeMillis</span><span class="o">()</span> <span class="o">-</span> <span class="n">startTime</span><span class="o">)</span> <span class="o">/</span> <span class="mi">1000</span><span class="o">;</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The prime numbers from 1 to "</span> <span class="o">+</span> <span class="n">Nmax</span> <span class="o">+</span> <span class="s">" is "</span>
				<span class="o">+</span> <span class="n">primeNum</span><span class="o">);</span>
		<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Time spent : "</span> <span class="o">+</span> <span class="n">timeSpent</span> <span class="o">+</span> <span class="s">" s"</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div>结果是：<br><img src="http://pic1.zhimg.com/f33bab17d832e4281b3b4939da77f594_b.jpg" data-rawwidth="376" data-rawheight="38" class="content_image" width="376"><img src="http://pic4.zhimg.com/96ae9481daff4ba6146482096ce3a393_b.jpg" data-rawwidth="391" data-rawheight="35" class="content_image" width="391"><br>200万以内用时 0.014 s<br>1亿以内用时 0.548 s <br><br><img src="http://pic3.zhimg.com/6a589dc6fcaabb01131dac0a4da1e6ce_b.jpg" data-rawwidth="341" data-rawheight="73" class="content_image" width="341"><br>确实，在Nmax特别大的时候（千万级别以上），欧拉筛法还是略有优势的，不过，它的缺点是要多开一个数组专门存质数，储存空间大了不少。
<a href="/question/24942373/answer/29599552" class="toggle-expand">显示全部</a>
<div class="fixed-summary-mask"></div>
</div>

</div>
</div>
</div>
</div>
<a class="zg-anchor-hidden ac" name="7223433-comment"></a>
<div class="zm-item-meta zm-item-comment-el answer-actions clearfix">
<div class="zm-meta-panel">

<span class="answer-date-link-wrap">
<a class="answer-date-link last_updated meta-item" data-tip="s$t$发布于 2014-08-23" target="_blank" href="/question/24942373/answer/29599552">编辑于 2014-08-24</a>
</span>

<a href="#" name="addcomment" class=" meta-item toggle-comment">
<i class="z-icon-comment"></i>22 条评论</a>


<a href="#" class="meta-item zu-autohide" name="thanks" data-thanked="false"><i class="z-icon-thank"></i>感谢</a>



<a href="#" class="meta-item zu-autohide" name="share">
<i class="z-icon-share"></i>分享</a>
<a href="#" class="meta-item zu-autohide" name="favo">
<i class="z-icon-collect"></i>收藏</a>




<span class="zg-bull zu-autohide">&bull;</span>

<a href="#" name="nohelp" class="meta-item zu-autohide">没有帮助</a>

<span class="zg-bull zu-autohide">&bull;</span>
<a href="#" name="report" class="meta-item zu-autohide">举报</a>



<span class="zg-bull">&bull;</span>

<a href="/terms#sec-licence-1" target="_blank" class="meta-item copyright"> 作者保留权利 </a>



</div>
</div>
</div>

</div>

<div class="zh-answers-title">
<h3><a href="/question/24942373" class="zg-link-litblue">查看全部 34 个回答</a></h3>
</div>
<div class="zu-answer-form-disabled-wrap" id="zh-single-answer-disable-wrap" style="display:none"></div>
<div class="shameimaru-placeholder" data-class="AnswerBottomShameimaruV2" data-params='{&quot;token&quot;:24942373}'></div>
</div>
</div>
<div class="zu-main-sidebar">


<div class="zm-side-section">
<div class="zm-side-section-inner">
<div class="well login-reg-box">
<span>知乎是一个真实的问答社区，在这里分享知识、经验和见解，发现更大的世界。<br>
<a id="js-reg-with-mail-in-top" href="#">使用手机或邮箱注册</a>
<span>·</span>
<a id="js-reg-with-qq-in-top" href="#">使用 QQ 登录</a>
</span>
<div class="clearfix">
<a id="js-reg-with-wechat-in-top" href="#" class="zg-btn-green"><span class="z-ico-wechat-right-panel"></span>使用微信登录</a>
<a id="js-reg-with-sina-in-top" href="#" class="zg-btn-red"><span class="icon-big-white-sina"></span>使用微博登录</a>
</div>
</div>
</div>
</div>



<div class="zm-side-section">
<div class="zm-side-section-inner zg-gray-normal" id="zh-question-side-header-wrap">
<button data-follow="q:m:button" class="follow-button zg-follow zg-btn-green" data-id="2158999">关注问题</button>

402
人关注该问题

</div>
</div>

<div class="zm-side-section sidebar-author-info clearfix">
<div class="zm-side-section-inner" id="js-sidebar-author-info">
<h3>关于作者</h3>
<div class="zm-profile-card zm-profile-section-item zg-clear no-hovercard">
<div class="zg-right">
<button data-follow="m:button" data-id="44d38beff79e57d4067a69ec021027fc" class="zg-btn zg-btn-follow zm-rich-follow-btn small nth-0">关注他</button>
</div>
<a title="无关风月"
data-tip="p$t$hu-wen-chao"
class="zm-item-link-avatar"
href="/people/hu-wen-chao">
<img src="http://pic3.zhimg.com/35cc03cf2_m.jpg" class="zm-item-img-avatar">
</a>
<div class="zm-list-content-medium">
<h2 class="zm-list-content-title"><a data-tip="p$t$hu-wen-chao" href="http://www.zhihu.com/people/hu-wen-chao" class="zg-link" title="无关风月">无关风月</a></h2>

<div class="zg-big-gray">刚刚上路的程序员，Python / 后端 / 游戏</div>
<div class="details zg-gray">
<a target="_blank" href="/people/hu-wen-chao/followers" class="zg-link-gray-normal">75 关注者</a>
/
<a target="_blank" href="/people/hu-wen-chao/asks" class="zg-link-gray-normal">1 提问</a>
/
<a target="_blank" href="/people/hu-wen-chao/answers" class="zg-link-gray-normal">53 回答</a>
/
<a target="_blank" href="/people/hu-wen-chao" class="zg-link-gray-normal">317 赞同</a>
</div>

</div>
</div>
</div>
</div>
<div class="shameimaru-placeholder" data-class="AnswerUpShameimaruV2" data-params='{&quot;token&quot;:24942373}'></div>



<div class="zm-side-section">
<div class="zm-side-section-inner">
<div id="zh-question-related-questions" class="zh-question-related-questions clearfix">

<a class="zg-right next">换一换</a>

<h3>相关问题</h3>
<ul itemprop="relatedQuestion" itemscope itemtype="http://schema.org/ItemList">

<li itemprop="itemListElement" itemscope itemtype="http://schema.org/Question"><a class="question_link" href="/question/19927564">在编程和算法领域，有哪些经典问题？</a> <span class="num">13 个回答</span><meta itemprop="followerCount" content="1223" /></li>

<li itemprop="itemListElement" itemscope itemtype="http://schema.org/Question"><a class="question_link" href="/question/20625168">用一门简单编程语言学习算法意义大不大？</a> <span class="num">5 个回答</span><meta itemprop="followerCount" content="32" /></li>

<li itemprop="itemListElement" itemscope itemtype="http://schema.org/Question"><a class="question_link" href="/question/20977382">哪种聚类算法可以不需要指定聚类的个数，而且可以生成聚类的规则？</a> <span class="num">25 个回答</span><meta itemprop="followerCount" content="271" /></li>

<li itemprop="itemListElement" itemscope itemtype="http://schema.org/Question"><a class="question_link" href="/question/19889750">有哪些用 Python 语言讲算法和数据结构的书？</a> <span class="num">9 个回答</span><meta itemprop="followerCount" content="260" /></li>

<li itemprop="itemListElement" itemscope itemtype="http://schema.org/Question"><a class="question_link" href="/question/19889760">有哪些用 Javascript 语言讲算法和数据结构的书？</a> <span class="num">2 个回答</span><meta itemprop="followerCount" content="31" /></li>

<li hidden itemprop="itemListElement" itemscope itemtype="http://schema.org/Question"><a class="question_link" href="/question/19706617">一个算法题：有一组未知个数的数字，把它们平均分成三份，使每份的和尽量相等。如何解决？</a> <span class="num">9 个回答</span><meta itemprop="followerCount" content="32" /></li>

<li hidden itemprop="itemListElement" itemscope itemtype="http://schema.org/Question"><a class="question_link" href="/question/20588646">在编程实现比较复杂算法的过程当中，有什么思路或者方法论可以帮助我们更好地实现？</a> <span class="num">3 个回答</span><meta itemprop="followerCount" content="20" /></li>

<li hidden itemprop="itemListElement" itemscope itemtype="http://schema.org/Question"><a class="question_link" href="/question/20127743">很多缩短链接服务器的不重复字符串算法在各种语言中是如何实现的？</a> <span class="num">4 个回答</span><meta itemprop="followerCount" content="26" /></li>

<li hidden itemprop="itemListElement" itemscope itemtype="http://schema.org/Question"><a class="question_link" href="/question/19772339">如何理解编程珠玑上的这道题？</a> <span class="num">3 个回答</span><meta itemprop="followerCount" content="31" /></li>

<li hidden itemprop="itemListElement" itemscope itemtype="http://schema.org/Question"><a class="question_link" href="/question/20187383">一个N*N的矩阵，取值为0或1，有什么好的算法判断一行或一列全为1啊？</a> <span class="num">13 个回答</span><meta itemprop="followerCount" content="40" /></li>

</ul>
</div>
</div>
</div>
<div class="zm-side-section zh-answer-status">
<div class="zm-side-section-inner">
<h3>回答状态</h3>
<p>

发布于

<span class="time">2014-09-23</span>
</p>
<p>
所属问题被浏览 <strong>19678</strong> 次
</p>
<p class="copyright">

<a href="/terms#sec-licence"><i class="icon icon-copyable"></i>作者保留所有权利</a>

</p>
</div>
</div>
<div class="shameimaru-placeholder" data-class="AnswerDownShameimaruV2" data-params='{&quot;token&quot;:24942373}'></div>
</div>
<div class="zg-clear"></div>
</div>

<div id="zh-footer" class="zh-footer">
<div class="zg-wrap clearfix">
<ul>

<li><a href="/app" target='_blank'>移动应用</a></li>
<li><a href="/careers">加入知乎</a></li>
<li><a href="/terms" target="_blank">知乎协议</a></li>
<li><a href="mailto:bd@zhihu.com">商务合作</a></li>
</ul>
<span class="copy">&copy; 2015 知乎</span>
</div>
</div>

<script type="text/json" class="json-inline" data-name="guiders2">{}</script>

<script type="text/template" class="register-template">
<div class="title register">
<h1>加入知乎</h1>
<h2>与世界分享你的知识、经验和见解</h2>
</div>
<div class="view register">
<form action="/register/email">
<div class="input-wrapper">
<input type="text" name="fullname" placeholder="姓名" required>
</div>
<div class="input-wrapper">
<input type="text" name="account" class="account" placeholder="手机号或邮箱" required>
</div>
<div class="input-wrapper toggle-password">
<input type="password" hidden> 
<input type="password" name="password" placeholder="密码（不少于 6 位）" required>
<span class="z-ico-show-password"></span>
</div>
<div class="input-wrapper captcha">
<input type="text" name="captcha" placeholder="验证码" required>
<div class="captcha" data-tip="s$b$看不清楚？换一张">
<img>
</div>
</div>
<div class="actions">
<button type="button" class="switch-to-login">已有帐号？</button>
<button class="submit blue-button">注册</button>
</div>
</form>
<div class="sns clearfix">
<h1>社交帐号登录</h1>
<button type="button" class="wechat"><span class="ico z-ico-wechat"></span>微信</button>
<button type="button" class="weibo"><span class="ico z-ico-weibo"></span>微博</button>
</div>
</div>
<div class="title verification">
<h1>验证手机</h1>
<h2>请输入你收到的 6 位数短信验证码</h2>
</div>
<div class="view verification">
<form>
<div class="input-wrapper">
<input type="text" name="phone_num" placeholder="手机号" required>
</div>
<div class="input-wrapper verification-code">
<input type="text" name="verification_code" placeholder="6 位数验证码" maxlength="6" required>
<button type="button" class="send-code">重发验证码</button>
</div>
<button class="submit blue-button">进入知乎</button>
</form>
</div>
</script>
<script type="text/template" class="login-template">
<div class="title login">
<h1>加入知乎</h1>
<h2>与世界分享你的知识、经验和见解</h2>
</div>
<div class="view login">
<form>
<div class="input-wrapper">
<input type="text" name="account" class="account" placeholder="手机号或邮箱" required>
</div>
<div class="input-wrapper toggle-password">
<input type="password" name="password" placeholder="密码" required>
<span class="z-ico-show-password"></span>
</div>
<div class="input-wrapper captcha">
<input type="text" name="captcha" placeholder="验证码" required>
<div class="captcha" data-tip="s$b$看不清楚？换一张">
<img>
</div>
</div>
<div class="actions">
<label class="remember-me"><input type="checkbox" name="remember_me" checked value="true">记住我</label>
<span class="middot">·</span>
<button class="unable-login" type="button">无法登录？</button>
<button class="submit blue-button">登录</button>
</div>
</form>
<div class="sns clearfix">
<h1>社交帐号登录</h1>
<button type="button" class="wechat"><span class="ico z-ico-wechat"></span>微信</button>
<button type="button" class="weibo"><span class="ico z-ico-weibo"></span>微博</button>
<button type="button" class="qq"><span class="ico z-ico-qq"></span>QQ</button>
</div>
</div>
</script>
<script type="text/template" class="unable-login-template">
<div class="title start">
<h1>无法登录</h1>
<h2>我们提供两种方式帮助你重新登录知乎</h2>
</div>
<div class="view start">
<button class="blue-button reset-password">找回密码</button>
<button class="blue-button sms-login">使用手机验证码登录</button>
</div>
<div class="title reset-password-verification">
<h1>找回密码</h1>
<h2>验证码将会发送至你的注册邮箱或手机</h2>
</div>
<div class="view reset-password-verification">
<form>
<div class="input-wrapper">
<input type="text" name="account" class="account" placeholder="手机号或邮箱" required>
</div>
<div class="input-wrapper captcha">
<input type="text" name="captcha" placeholder="验证码" required>
<div class="captcha" data-tip="s$b$看不清楚？换一张">
<img>
</div>
</div>
<button class="submit blue-button">获取验证码</button>
</form>
</div>
<div class="title reset-password">
<h1>重设密码</h1>
<h2>验证码将会发送至你的注册邮箱或手机</h2>
</div>
<div class="view reset-password">
<form action="/resetpassword/email">
<div class="input-wrapper">
<input type="text" name="account" class="account" placeholder="手机号或邮箱" required>
</div>
<div class="input-wrapper toggle-password">
<input type="password" hidden> 
<input type="password" name="password" placeholder="新密码" required>
<span class="z-ico-show-password"></span>
</div>
<div class="input-wrapper verification-code">
<input type="text" name="verification_code" placeholder="邮箱收到的 6 位数验证码" maxlength="6" required>
<button type="button" class="send-code">重发验证码</button>
</div>
<button class="submit blue-button">重设密码</button>
</form>
</div>
<div class="title sms-login-verification">
<h1>登录知乎</h1>
<h2>验证码将会发送至你的手机</h2>
</div>
<div class="view sms-login-verification">
<form>
<div class="input-wrapper">
<input type="text" name="phone_num" placeholder="手机号" required>
</div>
<div class="input-wrapper captcha">
<input type="text" name="captcha" placeholder="验证码" required>
<div class="captcha" data-tip="s$b$看不清楚？换一张">
<img>
</div>
</div>
<button class="submit blue-button">获取验证码</button>
</form>
</div>
<div class="title sms-login">
<h1>登录知乎</h1>
<h2>输入你收到的 6 位数短信验证码</h2>
</div>
<div class="view sms-login">
<form>
<div class="input-wrapper">
<input type="text" name="phone_num" placeholder="手机号" required>
</div>
<div class="input-wrapper verification-code">
<input type="text" name="verification_code" placeholder="6 位数验证码" maxlength="6" required>
<button type="button" class="send-code">重发验证码</button>
</div>
<button class="submit blue-button">登录知乎</button>
</form>
</div>
</script>
<script type="text/template" class="oauth-register-template">
<div class="title register">
<h1>填写姓名</h1>
<h2>请填写你的真实姓名</h2>
</div>
<div class="view register">
<form>
<div class="input-wrapper">
<input type="text" name="fullname" placeholder="姓名" required>
</div>
<div class="input-wrapper captcha">
<input type="text" name="captcha" placeholder="验证码" required>
<div class="captcha" data-tip="s$b$看不清楚？换一张">
<img>
</div>
</div>
<button class="submit blue-button">进入知乎</button>
</form>
</div>
<div class="title bound">
<h1>登录知乎</h1>
<h2>该微博曾绑定过以下帐号</h2>
</div>
<div class="view bound">
<img src="" width="50px" height="50px">
<span class="name"></span>
<button class="blue-button bind-login">绑定此帐号并登录</button>
<button class="button register">不绑定，用微博创建新帐号</button>
</div>
<div class="title registered">
<h1>微博邮箱已注册知乎</h1>
<h2>已注册至如下帐号</h2>
</div>
<div class="view registered">
<img src="" width="50px" height="50px">
<span class="name"></span>
<button class="blue-button bind-login">绑定此帐号并登录</button>
<button class="button register">不绑定，用微博创建新帐号</button>
</div>
<div class="title bind-login">
<h1>登录知乎</h1>
<h2>与世界分享你的知识、经验和见解</h2>
</div>
<div class="view bind-login">
<form>
<div class="input-wrapper">
<input type="text" name="account" class="account" placeholder="手机号或邮箱" required disabled>
</div>
<div class="input-wrapper toggle-password">
<input type="password" name="password" placeholder="密码" required>
<span class="z-ico-show-password"></span>
</div>
<div class="actions">
<button class="unable-login" type="button">无法登录？</button>
<button class="submit blue-button">绑定并登录</button>
</div>
</form>
</div>
</script>
<script type="text/json" class="json-inline" data-name="current_user">["","","","-1","",0,0]</script>
<script type="text/json" class="json-inline" data-name="env">["zhihu.com","comet.zhihu.com",false,null]</script>
<script type="text/json" class="json-inline" data-name="permissions">[]</script>


<script type="text/json" class="json-inline" data-name="ga_vars">{"user_created":0,"now":1439377086000,"abtest_mask":"------------------------------","user_attr":[0,0,0,"-","-"],"user_hash":0}</script>

<script type="text/json" class="json-inline" data-name="current_question">{"status":"normal","isLocked":0,"detailEditReasonRequired":true,"editPermission":false,"isAnon":0,"qid":2158999,"urlToken":24942373,"askAboutMember":0}</script>
<script type="text/json" class="json-inline" data-name="draft">[]</script>

<script src="http://static.zhihu.com/static/ver/e81122a3ca2b78ad911aff474211d7c3.extern_src.min.js"></script>
<script src="http://static.zhihu.com/static/ver/b0c7a5cbdc3276b724bfac6e36415230.app_core.js"></script>
<script src="http://static.zhihu.com/static/ver/95f0f0ba6d8ccaf3bd3340519da0f951.sign.js"></script>
<script src="http://static.zhihu.com/static/ver/6ffbff2a309997c4caff2ee2f6003bc0.app.js"></script>
<script src="http://static.zhihu.com/static/ver/2ae5b3b2576a4aa2a5845aef5b651a6f.rich_text_editor.js"></script>

<script type="text/zscript" znonce="a0e6fa8aaf5e4197b55b81d499bb3b56">
ZH.entrySA();
</script>

<input type="hidden" name="_xsrf" value="f3912bf511b13ec3281621485edfd61e"/>
</body>
</html>