Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Sparse is better than dense.
Flat is better than nested.
Readability counts.
Special cases aren't special enough to break these rules.
Although practicality beats purity.

In the face of ambiguity, refuse the temptation to guess.
There should be one, and preferably one obvious way to do it,
though it won't be quite clear at first unless you are Dutch.
Never let error pass silently,
unless you intended to do that.
Now is better than never,
but never is better than *right* now.
If your implementation is hard to explain, it's a bad idea.
If your implementation is easy to explain, it may be a good idea.

Namespace is one honking idea, let's do more of those!

-------------

Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Flat is better than nested.
Sparse is better than dense.
Readability counts.
Special cases aren't special enough to break these rules.
Although practibility beats purity.
Never let error passed silently.
Unless explicitly silenced.
In the face of ambiguity, refuse the temptation to guess.
There should be one, and preferably only one obvious way to do it,
Although it wasn't that obvious at the beginning unless you're Dutch.
Now is  better than never.
Although never is often better thant *right* now.
If your implementation is hard to explain, it's a bad idea.
If your implementation is easy to explain, it may be a good idea.
Namespace is one honking good idea, let's use more of those!
